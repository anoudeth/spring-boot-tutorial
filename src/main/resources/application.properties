spring.application.name=spring-mcp
server.port=8080
spring.profiles.active=pro
server.servlet.context-path=/ai

spring.main.web-application-type=none
spring.ai.mcp.server.name=dan-vega-mcp
spring.ai.mcp.server.version=0.0.1

# NOTE: You must disable the banner and the console logging
# to allow the STDIO transport to work !!!
spring.main.banner-mode=off
logging.pattern.console=


# --- Hikari Connection Pool Best Practices ---

# max-lifetime: The maximum lifetime of a connection in the pool.
# This should ALWAYS be shorter than the database's wait_timeout.
# Setting it to 30 minutes (1800000 ms) is a very safe and common value.
spring.datasource.hikari.max-lifetime=1800000

# connection-timeout: How long a client will wait for a connection from the pool.
# If the pool is exhausted, this is the timeout for a client to get a new connection.
# 30 seconds is a reasonable default.
spring.datasource.hikari.connection-timeout=30000

# idle-timeout: How long a connection can be idle in the pool before being retired.
# It should be less than max-lifetime. 10 minutes is a good starting point.
spring.datasource.hikari.idle-timeout=600000

# leak-detection-threshold: Helps you find connection leaks in your code.
# If a connection is checked out of the pool for longer than this (e.g., 2 minutes)
# without being returned, Hikari will log a warning. Very useful for debugging.
spring.datasource.hikari.leak-detection-threshold=120000